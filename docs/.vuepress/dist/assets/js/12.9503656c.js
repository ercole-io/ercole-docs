(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{204:function(e,t,n){"use strict";n.r(t);var r=n(0),o=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),n("h2",{attrs:{id:"requirements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[e._v("Component")]),e._v(" "),n("th",[e._v("Prerequisite")])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("Operating system")]),e._v(" "),n("td",[e._v("CentOS, RedHat, OracleLinux 7/8")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("RAM")]),e._v(" "),n("td",[e._v("4GB")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("Filesystem")]),e._v(" "),n("td",[e._v("50GB (minimum)")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("CPU")]),e._v(" "),n("td",[e._v("2 VirtualCPU")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("Database")]),e._v(" "),n("td",[n("a",{attrs:{href:"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/",target:"_blank",rel:"noopener noreferrer"}},[e._v("MongoDB"),n("OutboundLink")],1),e._v(" >= 4.2.0")])])])]),e._v(" "),n("h2",{attrs:{id:"minimal-default-required-network-firewall-rules"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minimal-default-required-network-firewall-rules","aria-hidden":"true"}},[e._v("#")]),e._v(" Minimal default required network/firewall rules")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[e._v("From")]),e._v(" "),n("th",[e._v("To")]),e._v(" "),n("th",[e._v("Port")]),e._v(" "),n("th",[e._v("Proto")])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),n("td",[e._v("nginx")]),e._v(" "),n("td",[e._v("80")]),e._v(" "),n("td",[e._v("HTTPS")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),n("td",[e._v("nginx")]),e._v(" "),n("td",[e._v("80")]),e._v(" "),n("td",[e._v("HTTPS")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),n("td",[e._v("nginx")]),e._v(" "),n("td",[e._v("443")]),e._v(" "),n("td",[e._v("HTTPS")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),n("td",[e._v("nginx")]),e._v(" "),n("td",[e._v("443")]),e._v(" "),n("td",[e._v("HTTPS")])])])]),e._v(" "),n("p",[e._v("It's highly recommended to also add "),n("a",{attrs:{href:"#suggested-network-firewall-rules"}},[e._v("network/firewall rules for downloading artifacts from github.com")]),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"instructions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instructions","aria-hidden":"true"}},[e._v("#")]),e._v(" Instructions")]),e._v(" "),n("p",[e._v("This installation guide is for RHEL8, but the steps can be easily adapted for RHEL7 .")]),e._v(" "),n("p",[e._v("Add yum repositories with ercole RPMs")]),e._v(" "),n("ul",[n("li",[n("p",[n("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-x86_64.repo | tee /etc/yum.repos.d/ercole-x86_64.repo")])])]),e._v(" "),n("li",[n("p",[n("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-noarch.repo | tee /etc/yum.repos.d/ercole-noarch.repo")]),e._v("\nInstall the required packages")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("yum install ercole ercole-web nginx")])])]),e._v(" "),n("li",[n("p",[e._v("Configure nginx by overwriting the file "),n("code",[e._v("/etc/nginx/nginx.conf")]),e._v(" to something like:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n    client_max_body_size 5M; \n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n\n    # Redirect http to https\n    server {\n        listen 80 default_server;\n    \n        server_name _;\n    \n        return 301 https://$host$request_uri;\n    }\n\n    # If you don\'t want to redirect http to https, delete the above server section and uncomment this:\n    # server {\n    #     listen       80 default_server;\n    #     listen       [::]:80 default_server;\n    #     server_name  _;\n    #     root         /usr/share/ercole/web;\n\n    #     # Load configuration files for the default server block.\n    #     include /etc/nginx/default.d/*.conf;\n\n    #     location / {\n    #             try_files $uri $uri/ /index.html =404;\n    #     }\n\n    #     location /data/ {\n    #         proxy_pass http://127.0.0.1:11111/;\n    #     }\n\n    #     location /api/ {\n    #         proxy_pass http://127.0.0.1:11113/;\n    #     }\n\n    #     location /repo/ {\n    #         proxy_pass http://127.0.0.1:11114/;\n    #     }\n\n    #     location /chart/ {\n    #         proxy_pass http://127.0.0.1:11116/;\n    #     }\n    # }\n\n    # Settings for a TLS enabled server.\n    #\n    server {\n        listen       443 ssl http2 default_server;\n        listen       [::]:443 ssl http2 default_server;\n        server_name  _;\n\n        ssl_certificate "/etc/pki/nginx/server.crt";\n        ssl_certificate_key "/etc/pki/nginx/private/server.key";\n        ssl_session_cache shared:SSL:1m;\n        ssl_session_timeout  10m;\n        ssl_prefer_server_ciphers on;\n\n        root         /usr/share/ercole/web;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n\t        try_files $uri $uri/ /index.html =404;\n        }\n\n        location /data/ {\n            proxy_pass http://127.0.0.1:11111/;\n        }\n\n        location /api/ {\n            proxy_pass http://127.0.0.1:11113/;\n        }\n\n        location /repo/ {\n            proxy_pass http://127.0.0.1:11114/;\n        }\n\n        location /chart/ {\n            proxy_pass http://127.0.0.1:11116/;\n        }\n    }\n}\n')])])]),n("ul",[n("li",[e._v("As default, we have set the redirect of "),n("code",[e._v("http")]),e._v(" requests to "),n("code",[e._v("https")]),e._v(". Uncomment the appropriate section if needed.")]),e._v(" "),n("li",[e._v("Increase "),n("code",[e._v("client_max_body_size")]),e._v(' if agents receive 413 "Payload Too Large" responses from the server')])])]),e._v(" "),n("li",[n("p",[n("code",[e._v("mkdir -p /etc/pki/nginx/private")])])]),e._v(" "),n("li",[n("p",[n("code",[e._v("openssl req -nodes -x509 -newkey rsa:4096 -keyout /etc/pki/nginx/private/server.key -out /etc/pki/nginx/server.crt")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Add the following lines to /etc/ercole/conf.d/20-ercolesetup.toml:")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('# FE.APIService.RemoteEndpoint = "https://<myip>/api"\n# FE.ChartService.RemoteEndpoint = "https://<myip>/chart"\n')])])]),n("ul",[n("li",[e._v("If your machine has multiple IP addresses, check and fix endpoints in "),n("code",[e._v("/etc/ercole/conf.d/20-ercolesetup.toml")]),e._v(".")]),e._v(" "),n("li",[e._v("If you want change the URI used to connect to mongodb, run the command "),n("code",[e._v("echo 'Mongodb.URI = \"mongodb://user:pass@ip:port/ercole\"' > /etc/ercole/conf.d/40-mongoconf.toml")]),e._v(" with the right "),n("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/connection-string/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mongo URI"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("li",[e._v("Review ercole configuration with "),n("code",[e._v("ercole show-config")])]),e._v(" "),n("li",[e._v("If you have changed ercole configuration, run the command "),n("code",[e._v("ercole-setup")])]),e._v(" "),n("li",[n("code",[e._v("systemctl start ercole")])]),e._v(" "),n("li",[n("code",[e._v("systemctl start enable nginx")])]),e._v(" "),n("li",[n("code",[e._v("systemctl start nginx")])])]),e._v(" "),n("h3",{attrs:{id:"troubleshooting"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[e._v("#")]),e._v(" Troubleshooting")]),e._v(" "),n("h4",{attrs:{id:"failed-13-permission-denied-while-connecting-to-upstream-in-var-log-nginx-error-log"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#failed-13-permission-denied-while-connecting-to-upstream-in-var-log-nginx-error-log","aria-hidden":"true"}},[e._v("#")]),e._v(" Failed (13: Permission denied) while connecting to upstream in /var/log/nginx/error.log")]),e._v(" "),n("p",[e._v("If curl https://127.0.0.1/repo/ping.txt doesn't return PONG! but returns nginx's 404 page and "),n("code",[e._v("/var/log/nginx/error.log")]),e._v(" contains lines like")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('2020/08/03 09:25:01 [crit] 77642#0: *16 connect() to 127.0.0.1:11111 failed (13: Permission denied) while connecting to upstream, client: 127.0.0.1, server: _, request: "GET /data/ping HTTP/1.1", upstream: "http://127.0.0.1:11111/ping", host: "127.0.0.1"\n')])])]),n("p",[e._v("Execute the command "),n("code",[e._v("setsebool -P httpd_can_network_connect 1")]),e._v(".\n"),n("a",{attrs:{href:"https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx"),n("OutboundLink")],1)])])},[],!1,null,null,null);t.default=o.exports}}]);