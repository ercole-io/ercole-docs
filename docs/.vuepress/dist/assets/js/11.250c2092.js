(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{203:function(e,t,a){"use strict";a.r(t);var r=a(0),i=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"ercole-ercole-web-nginx-common-setup-istructions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole-ercole-web-nginx-common-setup-istructions","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole + ercole-web + nginx common setup istructions")]),e._v(" "),a("h3",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("Component")]),e._v(" "),a("th",[e._v("Prerequisite")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Operating system")]),e._v(" "),a("td",[e._v("CentOS, RedHat, OracleLinux 7/8")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("RAM")]),e._v(" "),a("td",[e._v("4GB")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Filesystem")]),e._v(" "),a("td",[e._v("50GB (minimum)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("CPU")]),e._v(" "),a("td",[e._v("2 VirtualCPU")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Database")]),e._v(" "),a("td",[a("a",{attrs:{href:"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/",target:"_blank",rel:"noopener noreferrer"}},[e._v("MongoDB"),a("OutboundLink")],1),e._v(" >= 4.2.0")])])])]),e._v(" "),a("h3",{attrs:{id:"minimal-default-required-network-firewall-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimal-default-required-network-firewall-rules","aria-hidden":"true"}},[e._v("#")]),e._v(" Minimal default required network/firewall rules")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("From")]),e._v(" "),a("th",[e._v("To")]),e._v(" "),a("th",[e._v("Port")]),e._v(" "),a("th",[e._v("Proto")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),a("td",[e._v("nginx")]),e._v(" "),a("td",[e._v("80")]),e._v(" "),a("td",[e._v("HTTPS")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),a("td",[e._v("nginx")]),e._v(" "),a("td",[e._v("80")]),e._v(" "),a("td",[e._v("HTTPS")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),a("td",[e._v("nginx")]),e._v(" "),a("td",[e._v("443")]),e._v(" "),a("td",[e._v("HTTPS")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),a("td",[e._v("nginx")]),e._v(" "),a("td",[e._v("443")]),e._v(" "),a("td",[e._v("HTTPS")])])])]),e._v(" "),a("p",[e._v("It's highly recommended to also add "),a("a",{attrs:{href:"#suggested-network-firewall-rules"}},[e._v("network/firewall rules for downloading artifacts from github.com")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"instructions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instructions","aria-hidden":"true"}},[e._v("#")]),e._v(" Instructions")]),e._v(" "),a("p",[e._v("This installation guide is for RHEL8, but the steps can be easily adapted for RHEL7 .")]),e._v(" "),a("p",[e._v("Add yum repositories with ercole RPMs")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-x86_64.repo | tee /etc/yum.repos.d/ercole-x86_64.repo")])]),e._v(" "),a("li",[a("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-noarch.repo | tee /etc/yum.repos.d/ercole-noarch.repo")]),e._v("\nInstall the required packages")]),e._v(" "),a("li",[a("code",[e._v("yum install ercole ercole-web nginx")])]),e._v(" "),a("li",[e._v("Configure nginx by overwriting the file "),a("code",[e._v("/etc/nginx/nginx.conf")]),e._v(" to something like:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n\n    server {\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  _;\n        root         /usr/share/ercole/web;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n\t        try_files $uri $uri/ /index.html =404;\n        }\n\n        location /data/ {\n            proxy_pass http://127.0.0.1:11111/;\n        }\n\n        location /api/ {\n            proxy_pass http://127.0.0.1:11113/;\n        }\n\n        location /repo/ {\n            proxy_pass http://127.0.0.1:11114/;\n        }\n\n        location /chart/ {\n            proxy_pass http://127.0.0.1:11116/;\n        }\n    }\n\n    # Redirect http to https\n    # server {\n    #     listen 80 default_server;\n    # \n    #     server_name _;\n    # \n    #     return 301 https://$host$request_uri;\n    # }\n\n    # Settings for a TLS enabled server.\n    #\n    server {\n        listen       443 ssl http2 default_server;\n        listen       [::]:443 ssl http2 default_server;\n        server_name  _;\n\n        ssl_certificate "/etc/pki/nginx/server.crt";\n        ssl_certificate_key "/etc/pki/nginx/private/server.key";\n        ssl_session_cache shared:SSL:1m;\n        ssl_session_timeout  10m;\n        ssl_ciphers PROFILE=SYSTEM;\n        ssl_prefer_server_ciphers on;\n\n        root         /usr/share/ercole/web;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n\t        try_files $uri $uri/ /index.html =404;\n        }\n\n        location /data/ {\n            proxy_pass http://127.0.0.1:11111/;\n        }\n\n        location /api/ {\n            proxy_pass http://127.0.0.1:11113/;\n        }\n\n        location /repo/ {\n            proxy_pass http://127.0.0.1:11114/;\n        }\n\n        location /chart/ {\n            proxy_pass http://127.0.0.1:11116/;\n        }\n    }\n}\n')])])]),a("ul",[a("li",[a("code",[e._v("mkdir -p /etc/pki/nginx/private")])]),e._v(" "),a("li",[a("code",[e._v("openssl req -nodes -x509 -newkey rsa:4096 -keyout /etc/pki/nginx/private/server.key -out /etc/pki/nginx/server.crt")]),e._v(".")]),e._v(" "),a("li",[e._v("Add the following lines to /etc/ercole/conf.d/20-ercolesetup.toml:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# FE.APIService.RemoteEndpoint = "https://<myip>/api"\n# FE.ChartService.RemoteEndpoint = "https://<myip>/chart"\n')])])]),a("ul",[a("li",[e._v("If your machine has multiple IP addresses, check and fix endpoints in "),a("code",[e._v("/etc/ercole/conf.d/20-ercolesetup.toml")]),e._v(".")]),e._v(" "),a("li",[e._v("If you want change the URI used to connect to mongodb, run the command "),a("code",[e._v("echo 'Mongodb.URI = \"mongodb://user:pass@ip:port/ercole\"' > /etc/ercole/conf.d/40-mongoconf.toml")]),e._v(" with the right "),a("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/connection-string/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mongo URI"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("li",[e._v("Review ercole configuration with "),a("code",[e._v("ercole show-config")])]),e._v(" "),a("li",[e._v("If you have changed ercole configuration, run the command "),a("code",[e._v("ercole-setup")])]),e._v(" "),a("li",[a("code",[e._v("systemctl start ercole")])]),e._v(" "),a("li",[a("code",[e._v("systemctl start enable nginx")])]),e._v(" "),a("li",[a("code",[e._v("systemctl start nginx")])])]),e._v(" "),a("h4",{attrs:{id:"troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[e._v("#")]),e._v(" Troubleshooting")]),e._v(" "),a("h5",{attrs:{id:"failed-13-permission-denied-while-connecting-to-upstream-in-var-log-nginx-error-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#failed-13-permission-denied-while-connecting-to-upstream-in-var-log-nginx-error-log","aria-hidden":"true"}},[e._v("#")]),e._v(" Failed (13: Permission denied) while connecting to upstream in /var/log/nginx/error.log")]),e._v(" "),a("p",[e._v("If curl https://127.0.0.1/repo/ping.txt doesn't return PONG! but returns nginx's 404 page and "),a("code",[e._v("/var/log/nginx/error.log")]),e._v(" contains lines like")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('2020/08/03 09:25:01 [crit] 77642#0: *16 connect() to 127.0.0.1:11111 failed (13: Permission denied) while connecting to upstream, client: 127.0.0.1, server: _, request: "GET /data/ping HTTP/1.1", upstream: "http://127.0.0.1:11111/ping", host: "127.0.0.1"\n')])])]),a("p",[e._v("Execute the command "),a("code",[e._v("setsebool -P httpd_can_network_connect 1")]),e._v(".\n"),a("a",{attrs:{href:"https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"ercole"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole")]),e._v(" "),a("p",[e._v("Ercole is the backend component of ercole.io project.")]),e._v(" "),a("h3",{attrs:{id:"requirements-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("Component")]),e._v(" "),a("th",[e._v("Prerequisite")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Operating system")]),e._v(" "),a("td",[e._v("CentOS, RedHat, OracleLinux 7/8")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("RAM")]),e._v(" "),a("td",[e._v("4GB")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Filesystem")]),e._v(" "),a("td",[e._v("50GB (minimum)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("CPU")]),e._v(" "),a("td",[e._v("2 VirtualCPU")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Database")]),e._v(" "),a("td",[e._v("MongoDB >= 4.2.0")])])])]),e._v(" "),a("h4",{attrs:{id:"minimal-default-required-network-firewall-rules-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimal-default-required-network-firewall-rules-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Minimal default required network/firewall rules")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("From")]),e._v(" "),a("th",[e._v("To")]),e._v(" "),a("th",[e._v("Port")]),e._v(" "),a("th",[e._v("Proto")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),a("td",[e._v("ercole-dataservice")]),e._v(" "),a("td",[e._v("11111")]),e._v(" "),a("td",[e._v("HTTP[1]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),a("td",[e._v("ercole-apiservice")]),e._v(" "),a("td",[e._v("11113")]),e._v(" "),a("td",[e._v("HTTP[1]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),a("td",[e._v("ercole-chartservice")]),e._v(" "),a("td",[e._v("11116")]),e._v(" "),a("td",[e._v("HTTP[1]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),a("td",[e._v("ercole-reposervice")]),e._v(" "),a("td",[e._v("11114")]),e._v(" "),a("td",[e._v("HTTP[1]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),a("td",[e._v("ercole-reposervice")]),e._v(" "),a("td",[e._v("11114")]),e._v(" "),a("td",[e._v("HTTP[1]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("users")]),e._v(" "),a("td",[e._v("ercole-reposervice")]),e._v(" "),a("td",[e._v("11115")]),e._v(" "),a("td",[e._v("SSH")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("agents")]),e._v(" "),a("td",[e._v("ercole-reposervice")]),e._v(" "),a("td",[e._v("11115")]),e._v(" "),a("td",[e._v("SSH")])])])]),e._v(" "),a("p",[e._v("[1] It is highly recommended to setup a reverse proxy between users/agents and ercole for avoiding to comunicate directly to the microservices using HTTP and opening too much ports, using for example nginx. See the istructions below.")]),e._v(" "),a("h5",{attrs:{id:"suggested-network-firewall-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#suggested-network-firewall-rules","aria-hidden":"true"}},[e._v("#")]),e._v(" Suggested network/firewall rules")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("From")]),e._v(" "),a("th",[e._v("To")]),e._v(" "),a("th",[e._v("Port")]),e._v(" "),a("th",[e._v("Proto")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("ercole-reposervice")]),e._v(" "),a("td",[e._v("*.github.com")]),e._v(" "),a("td",[e._v("443")]),e._v(" "),a("td",[e._v("HTTPS[1]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("ercole-reposervice")]),e._v(" "),a("td",[e._v("repository.ercole.io")]),e._v(" "),a("td",[e._v("443")]),e._v(" "),a("td",[e._v("HTTPS[1]")])])])]),e._v(" "),a("p",[e._v("[1] You can safely separate ercole-reposervice from the others microservices.")]),e._v(" "),a("h3",{attrs:{id:"installation-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Installation guide")]),e._v(" "),a("p",[e._v("This installation guide is for RHEL8, but the steps can be easily adapted for RHEL7 .")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-x86_64.repo | tee /etc/yum.repos.d/ercole-x86_64.repo")])]),e._v(" "),a("li",[a("code",[e._v("yum install ercole")])]),e._v(" "),a("li",[e._v("If your machine has multiple IP addresses, check and fix endpoints in "),a("code",[e._v("/etc/ercole/conf.d/20-ercolesetup.toml")])]),e._v(" "),a("li",[e._v("Review ercole configuration with "),a("code",[e._v("ercole show-config")])]),e._v(" "),a("li",[a("code",[e._v("systemctl start ercole")])])]),e._v(" "),a("p",[e._v("Ercole is configured automatically during the installation but you can edit the configuration by creating/files in "),a("code",[e._v("/etc/ercole/conf.d")]),e._v(". Its logs can be read with the command "),a("code",[e._v("journalctl -u ercole-dataservice -u ercole-alertservice -u ercole-apiservice -u ercole-reposervice -u ercole-chartservice")]),e._v(" and can be updated as usually with a simple "),a("code",[e._v("yum update")]),e._v(" unless in the new versions were introduced breaking changes.\nIt is also recommeded to also install "),a("a",{attrs:{href:"https://stedolan.github.io/jq/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jq"),a("OutboundLink")],1),e._v(".\nAfter the installation you may want to "),a("a",{attrs:{href:"#installation-guide-2"}},[e._v("install ercole-web and configure nginx")]),e._v(" or to "),a("a",{attrs:{href:"#various-howto-examples"}},[e._v("install artifacts")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"ercole-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole configuration")]),e._v(" "),a("p",[e._v("The configuration is written in "),a("a",{attrs:{href:"https://github.com/toml-lang/toml",target:"_blank",rel:"noopener noreferrer"}},[e._v("TOML"),a("OutboundLink")],1),e._v(" syntax and it is stored in these files/directory in ascending order of priority. The properties specified in low priority configuration files are overriden by the values in high priority configuration files. The configurations files are:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("/opt/ercole/config.toml")]),e._v(" (legacy config file)")]),e._v(" "),a("li",[a("code",[e._v("/usr/share/ercole/config.toml")]),e._v(" (distributor config file)")]),e._v(" "),a("li",[a("code",[e._v("/etc/ercole/ercole.toml")])]),e._v(" "),a("li",[a("code",[e._v("/etc/ercole/conf.d/*.toml")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("/etc/ercole/conf.d/20-ercolesetup.toml")]),e._v(" is a file created by "),a("code",[e._v("ercole-setup")]),e._v(" utility that contains known host specific configuration like remote endpoints, paths to certificates/keys and inter microservice configuration params.")])])]),e._v(" "),a("li",[a("code",[e._v("~/.config/ercole.toml")])]),e._v(" "),a("li",[a("code",[e._v("./config.toml")])]),e._v(" "),a("li",[e._v("An optional file specified to the "),a("code",[e._v("ercole")]),e._v(" using the "),a("code",[e._v("-c")]),e._v(" option.")])]),e._v(" "),a("p",[e._v("It's highly recommended to configure it by creating files in "),a("code",[e._v("/etc/ercole/conf.d")]),e._v(" (e.g "),a("code",[e._v("/etc/ercole/conf.d/50-myconf.toml")]),e._v("). If you change the "),a("code",[e._v("RemoteEndpoint")]),e._v("s of the microservices you may need to re-run "),a("code",[e._v("ercole-setup")]),e._v("(or "),a("code",[e._v("ercoleweb-setup")]),e._v(" if you have installed ercole-web).")]),e._v(" "),a("h4",{attrs:{id:"main-configuration-properties-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-configuration-properties-list","aria-hidden":"true"}},[e._v("#")]),e._v(" (main) Configuration properties list")]),e._v(" "),a("h5",{attrs:{id:"mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb","aria-hidden":"true"}},[e._v("#")]),e._v(" Mongodb.*")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Mongodb.URI")]),e._v(" is the "),a("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/connection-string/",target:"_blank",rel:"noopener noreferrer"}},[e._v("uri"),a("OutboundLink")],1),e._v(" used to connect to the mongodb database. The default value is "),a("code",[e._v("mongodb://localhost:27017/ercole")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("Mongodb.DBName")]),e._v(" is the name of the mongodb database. The default value is "),a("code",[e._v("ercole")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("Mongodb.Migrate")]),e._v(" contains true if ercole should update/migrate the database schema, otherwise false. The default value is "),a("code",[e._v("true")]),e._v(". When ercole is started, it try to update the structure of the database by updating the schemas, updating the documents, creating the indexes, inserting default values.")])]),e._v(" "),a("h5",{attrs:{id:"dataservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dataservice","aria-hidden":"true"}},[e._v("#")]),e._v(" DataService.*")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("DataService.RemoteEndpoint")]),e._v(" contains the URI used by clients to connect to the dataservice.")]),e._v(" "),a("li",[a("code",[e._v("DataService.BindIP")]),e._v(" contains the IP Address on which data service listen.")]),e._v(" "),a("li",[a("code",[e._v("DataService.Port")]),e._v(" contains the port on which data service listen.")]),e._v(" "),a("li",[a("code",[e._v("DataService.LogHTTPRequest")]),e._v(" enable the logging of the http request.")]),e._v(" "),a("li",[a("code",[e._v("DataService.LogInsertingHostdata")]),e._v(" enable the logging of the inserting hostdata.")]),e._v(" "),a("li",[a("code",[e._v("DataService.LogDataPatching")]),e._v(" enable the logging of data patching events.")]),e._v(" "),a("li",[a("code",[e._v("DataService.EnablePatching")]),e._v(" enable the patching of hostdata. It's required for tagging the hosts and modifying Oracle Database license count values.")]),e._v(" "),a("li",[a("code",[e._v("DataService.AgentUsername")]),e._v(" contains the username used to authenticate agents")]),e._v(" "),a("li",[a("code",[e._v("DataService.AgentPassword")]),e._v(" contains the password used to authenticate agents")]),e._v(" "),a("li",[a("code",[e._v("DataService.CurrentHostCleaningJob.Crontab")]),e._v(" contains the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cron",target:"_blank",rel:"noopener noreferrer"}},[e._v("cron"),a("OutboundLink")],1),e._v(" schedule expression for automatic archivial of the current (non archived).")]),e._v(" "),a("li",[a("code",[e._v("DataService.CurrentHostCleaningJob.HourThreshold")]),e._v(" contains the maximium number of hours in which a hostdata is considered up to date. After this threshold the host will be archived by the CurrentHostCleaningJob.")]),e._v(" "),a("li",[a("code",[e._v("DataService.CurrentHostCleaningJob.RunAtStartup")]),e._v(" enable the running of the current host cleaning job at startup.")]),e._v(" "),a("li",[a("code",[e._v("DataService.ArchivedHostCleaningJob.Crontab")]),e._v(" contains the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cron",target:"_blank",rel:"noopener noreferrer"}},[e._v("cron"),a("OutboundLink")],1),e._v(" schedule expression for automatic deletion of archived hosts.")]),e._v(" "),a("li",[a("code",[e._v("DataService.ArchivedHostCleaningJob.HourThreshold")]),e._v(" contains the maximium number of hours in which a archived hostdata is retained. After this threshold the archived host will be deleted by the ArchivedHostCleaningJob.")]),e._v(" "),a("li",[a("code",[e._v("DataService.ArchivedHostCleaningJob.RunAtStartup")]),e._v(" enable the running of the archived host cleaning job at startup.")])]),e._v(" "),a("h5",{attrs:{id:"alertservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alertservice","aria-hidden":"true"}},[e._v("#")]),e._v(" AlertService.*")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("AlertService.RemoteEndpoint")]),e._v(" contains the URI used by the microservices to connect to the alertservice.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.BindIP")]),e._v(" contains the IP Address on which alert service listen.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Port")]),e._v(" contains the port on which alert service listen.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.LogHTTPRequest")]),e._v(" enable the logging of the http request.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.LogMessages")]),e._v(" enable the logging of the processing queue messages.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.LogAlertThrows")]),e._v(" enable the logging of throwing alerts.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.PublisherUsername")]),e._v(" contains the username used to authenticate the microservices.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.PublisherPassword")]),e._v(" contains the password used to authenticate the microservices.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.FreshnessCheckJob.Crontab")]),e._v(" contains the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cron",target:"_blank",rel:"noopener noreferrer"}},[e._v("cron"),a("OutboundLink")],1),e._v(" schedule expression for automatic throws of NO_DATA alerts when a current host is not up to date.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.FreshnessCheckJob.DaysThreshold")]),e._v(" contains the maximium number of days in which a hostdata is considered up to date. After this threshold a NO_DATA alert is thrown by the FreshnessCheckJob.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.FreshnessCheckJob.RunAtStartup")]),e._v(" enable the running of the freshness check job at startup.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.Enabled")]),e._v(" enable the notifying of the alerts by email.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.From")]),e._v(" the source email address that is used to send emails.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.To")]),e._v(" the destination email addresses to which are sent the emails.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.SMTPServer")]),e._v(" SMTP server used to send email.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.SMTPPort")]),e._v(" port of the SMTP server used to send email.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.SMTPUsername")]),e._v(" username used to authenticate to the SMTP server.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.SMTPPassword")]),e._v(" password used to authenticate to the SMTP server.")]),e._v(" "),a("li",[a("code",[e._v("AlertService.Emailer.DisableSSLCertificateValidation")]),e._v(" true if disable the authentication of the SMTP server.")])]),e._v(" "),a("h5",{attrs:{id:"apiservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apiservice","aria-hidden":"true"}},[e._v("#")]),e._v(" APIService.*")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("APIService.RemoteEndpoint")]),e._v(" contains the URI used by the clients to connect to the apiservice.")]),e._v(" "),a("li",[a("code",[e._v("APIService.BindIP")]),e._v(" contains the IP Address on which api service listen.")]),e._v(" "),a("li",[a("code",[e._v("APIService.Port")]),e._v(" contains the port on which api service listen.")]),e._v(" "),a("li",[a("code",[e._v("APIService.LogHTTPRequest")]),e._v(" enable the logging of the http request.")]),e._v(" "),a("li",[a("code",[e._v("APIService.ReadOnly")]),e._v(" disable the APIs that modify the data")]),e._v(" "),a("li",[a("code",[e._v("APIService.EnableInsertingCustomPatchingFunction")]),e._v(" enable the possibility to add/set a custom patching function.")]),e._v(" "),a("li",[a("code",[e._v("APIService.DebugOracleDatabaseAgreementsAssignmentAlgorithm")]),e._v(" enable the verbosity of the assignment algorithm used to distribuite oracle database agreement licenses.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Type")]),e._v(" contains the authentication type. The allowed values are "),a("code",[e._v("basic")]),e._v(" and "),a("code",[e._v("ldap")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Username")]),e._v(" contains the username used to authenticate user when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("basic")]),e._v(". It also contains the username used by "),a("code",[e._v("ercole")]),e._v(" to perform requests to APIService.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Password")]),e._v(" contains the password used to authenticate password when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("basic")]),e._v(". It also contains the password used by "),a("code",[e._v("ercole")]),e._v(" to perform requests to APIService.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Username")]),e._v(" contains the username used to authenticate user when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("basic")]),e._v(". It also contains the username used by "),a("code",[e._v("ercole")]),e._v(" to perform requests to APIService.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Password")]),e._v(" contains the password used to authenticate password when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("basic")]),e._v(". It also contains the password used by "),a("code",[e._v("ercole")]),e._v(" to perform requests to APIService.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.PrivateKey")]),e._v(" contains the key used to sign the authentication JWT tokens.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.PublicKey")]),e._v(" contains the key used to validate the authentication JWT tokens.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.TokenValidityTimeout")]),e._v(" contains the maximum number of seconds on which the token is considered valid.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Host")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", contains the server used to authenticate the users.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.Port")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", contains the port used to connect to the LDAP server. e.g. 389.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.LDAPBase")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", contains the LDAP base of the realm. e.g. dc=planetexpress,dc=com.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.LDAPUseSSL")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", enable/disable SSL for connecting to the server.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.LDAPBindDN")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", contains the account used to authenticate to the LDAP server. e.g. cn=admin,dc=planetexpress,dc=com.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.LDAPBindPassword")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", contains the password account used to authenticate to the LDAP server. e.g. GoodNewsEveryone.")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.LDAPUserFilter")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", it's unknown the purpose of this field but put "),a("code",[e._v("(uid=%s)")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("APIService.AuthenticationProvider.LDAPGroupFilter")]),e._v(", when "),a("code",[e._v("Type")]),e._v(" is "),a("code",[e._v("ldap")]),e._v(", it's unknown the purpose of this field but put "),a("code",[e._v("(memberUid=%s)")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("APIService.OperatingSystemAggregationRules")]),e._v(" are the rules used to map OS names + Version to product.")])]),e._v(" "),a("h5",{attrs:{id:"reposervice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reposervice","aria-hidden":"true"}},[e._v("#")]),e._v(" RepoService.*")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("RepoService.UpstreamRepositories")]),e._v(" contains the upstream repository from which the artifacts are downloaded.\n"),a("ul",[a("li",[a("code",[e._v("Name")]),e._v(" contains the name of the repository.")]),e._v(" "),a("li",[a("code",[e._v("Type")]),e._v(" contains the type of the repository. The allowed values are "),a("code",[e._v("github-release")]),e._v(", "),a("code",[e._v("directory")]),e._v(", "),a("code",[e._v("ercole-reposervice")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("URL")]),e._v(" contains the URL used to find the files. In the case of "),a("code",[e._v("github-release")]),e._v(" it should the URL of the API that return the releases list. e.g https://api.github.com/repos/ercole-io/ercole-agent/releases. In the case of "),a("code",[e._v("directory")]),e._v(" it should be the directory in which the artifacts are contained. In the case of "),a("code",[e._v("ercole-reposervice")]),e._v(" it should be the url of a directory that contains the directory "),a("code",[e._v("all")]),e._v(" and the file "),a("code",[e._v("index.json")]),e._v(".")])])]),e._v(" "),a("li",[a("code",[e._v("RepoService.HTTP.Enable")]),e._v(" contains true if reposervice should serve the files via HTTP.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.HTTP.RemoteEndpoint")]),e._v(" contains the url used by clients to reach the repository via HTTP.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.HTTP.BindIP")]),e._v(" contains the IP on which reposervice listen for HTTP requests.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.HTTP.Port")]),e._v(" contains the port on which reposervice listen for HTTP requests.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.HTTP.LogHTTPRequest")]),e._v(" true if reposervice should log for every received HTTP request.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.Enable")]),e._v(" contains true if reposervice should serve the files via SFTP.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.RemoteEndpoint")]),e._v(" contains the url used by clients to reach the repository via SFTP.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.BindIP")]),e._v(" contains the IP on which reposervice listen for SFTP.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.Port")]),e._v(" contains the port on which reposervice listen for SFTP.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.PrivateKey")]),e._v(" contains the private key used by the SFTP server.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.LogConnections")]),e._v(" true if reposervice should log the connections from SFTP clients.")]),e._v(" "),a("li",[a("code",[e._v("RepoService.SFTP.DebugConnections")]),e._v(" true if reposervice should log degug messages of the connections from SFTP clients.")])]),e._v(" "),a("h5",{attrs:{id:"chartservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chartservice","aria-hidden":"true"}},[e._v("#")]),e._v(" ChartService.*")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ChartService.RemoteEndpoint")]),e._v(" contains the URI used by the clients to connect to the chartservice.")]),e._v(" "),a("li",[a("code",[e._v("ChartService.BindIP")]),e._v(" contains the IP Address on which chart service listen.")]),e._v(" "),a("li",[a("code",[e._v("ChartService.Port")]),e._v(" contains the port on which chart service listen.")]),e._v(" "),a("li",[a("code",[e._v("ChartService.LogHTTPRequest")]),e._v(" enable the logging of the http request.")])]),e._v(" "),a("h3",{attrs:{id:"notes-about-the-internal-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes-about-the-internal-repository","aria-hidden":"true"}},[e._v("#")]),e._v(" Notes about the internal repository")]),e._v(" "),a("p",[e._v("Ercole repository is tought to be public and visibile to everyone so it shouldn't contains private informations like the password or private keys. The main ercole repository is "),a("a",{attrs:{href:"https://repository.ercole.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://repository.ercole.io"),a("OutboundLink")],1),e._v(". It is served via HTTP and via SFTP so you can download files in various mode like:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("wget http://myawesomeercole2.local:11114/ping.txt")])]),e._v(" "),a("li",[a("code",[e._v("curl http://myawesomeercole2.local:11114/ping.txt > /tmp/ping.txt")])]),e._v(" "),a("li",[a("code",[e._v("sftp -P 11115 myawesomeercole2.local/ping.txt /tmp/ping.txt")]),e._v("\nSome repository files/directory are managed using the "),a("code",[e._v("ercole repo")]),e._v(" subcommands. Others files/directories can be safely modified.")])]),e._v(" "),a("p",[e._v("Managed files:\n* "),a("code",[e._v("ping.txt")]),e._v(" is a file used to check the liveness of the microservices. It's really managed but it's recommended to not modify it.\n* "),a("code",[e._v("index.json")]),e._v(" contains the cached list of available artifacts. Can be safely removed for forcing the rebuild of the cache when the next "),a("code",[e._v("repo")]),e._v(" subcommands is run.\n* "),a("code",[e._v("all/")]),e._v(" contains the symlinks to all installed (and managed) artifacts.\n* "),a("code",[e._v("rhel/*")]),e._v(" contains the RPM repositories of the packages for every RHEL versions.\n* "),a("code",[e._v("win/*")]),e._v(" contains various ercole-agent setup files for windows.\n* "),a("code",[e._v("aix/")]),e._v(" contains the RPM repositories of the packages for every AIX versions.\n* "),a("code",[e._v("aix-tar-gz/")]),e._v(" alternative artifacts of agents for AIX.\n* "),a("code",[e._v("hpux/")]),e._v(" contains the agents for HPUX.")]),e._v(" "),a("p",[e._v("Unmanaged known files:\n* "),a("code",[e._v("shared/")]),e._v(" contains various files like some .repo files.\n* "),a("code",[e._v("snapshots/")]),e._v(" is a directory present in "),a("a",{attrs:{href:"https://repository.ercole.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://repository.ercole.io"),a("OutboundLink")],1),e._v(" that is used to store snapshots of all projects. The snapshots aren't tought to be used outside the development.")]),e._v(" "),a("p",[e._v("The public repository don't serve files via SFTP.\nIt may be a good idea to create multiple ercole reposervice for directory for stable/testing/unstable or PRD/COL/TST.")]),e._v(" "),a("h3",{attrs:{id:"main-ercole-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-ercole-usage","aria-hidden":"true"}},[e._v("#")]),e._v(" (main) ercole usage")]),e._v(" "),a("p",[e._v("Ercole is a command line tool so it can be used to perform some.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ercole version")]),e._v(" print the version of ecole.")]),e._v(" "),a("li",[a("code",[e._v("ercole show-config")]),e._v(" show the ercole's actual configuration.")]),e._v(" "),a("li",[a("code",[e._v("ercole fire-hostdata")]),e._v(" send a hostdata stored in a json file or from a stdin to ercole-dataservice.")]),e._v(" "),a("li",[a("code",[e._v("ercole migrate")]),e._v(" migrate the structure of the mongodb database from a previous one to the latest.")]),e._v(" "),a("li",[a("code",[e._v("ercole serve")]),e._v(" start the services. Every microservices can be turned on/off esplicitily using the various --enable options like --enable-dataservice.")]),e._v(" "),a("li",[a("code",[e._v("ercole api")]),e._v(" is a group of subcommands used to perform request data from ercole-apiservice.")]),e._v(" "),a("li",[a("code",[e._v("ercole chart")]),e._v(" is a group of subcommands used to perform request data from ercole-chartservice.")]),e._v(" "),a("li",[a("code",[e._v("ercole repo")]),e._v(" is a group of subcommands used to manage the repository. Can accept the command --rebuild-cache to force the rebuild of the cache stored in "),a("code",[e._v("/var/lib/ercole/distributed_directory/index.json")]),e._v(".\n"),a("ul",[a("li",[a("code",[e._v("... list")]),e._v(" lists the artifacts detected in the upstream repositories.")]),e._v(" "),a("li",[a("code",[e._v("... info")]),e._v(" get the informations about the specified artifacts.")]),e._v(" "),a("li",[a("code",[e._v("... install")]),e._v(" download and install the specified artifacts.")]),e._v(" "),a("li",[a("code",[e._v("... remove")]),e._v(" uninstall the specified artifacts.")]),e._v(" "),a("li",[a("code",[e._v("... update")]),e._v(" try to find newer version of all installed artifacts and install them.")])])])]),e._v(" "),a("h3",{attrs:{id:"various-howto-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#various-howto-examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Various HOWTO/examples")]),e._v(" "),a("h4",{attrs:{id:"how-to-install-a-artifact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-install-a-artifact","aria-hidden":"true"}},[e._v("#")]),e._v(" How to install a artifact")]),e._v(" "),a("ul",[a("li",[e._v("The first thing to do is to find the available artifacts by running the command: "),a("code",[e._v("ercole repo list")])]),e._v(" "),a("li",[e._v("Choose the artifact you want.")]),e._v(" "),a("li",[e._v("Install it with for example with the command: "),a("code",[e._v("ercole repo install ercole-agent/ercole-agent-rhel7@1.5.0")])])]),e._v(" "),a("h4",{attrs:{id:"install-a-package-to-rhelx-from-the-ercole-reposervice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-a-package-to-rhelx-from-the-ercole-reposervice","aria-hidden":"true"}},[e._v("#")]),e._v(" Install a package to rhelX from the ercole-reposervice")]),e._v(" "),a("p",[e._v("The first thing to do is to create a repository file .")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel7-x86_64.repo | tee /etc/yum.repos.d/ercole.repo")])])]),e._v(" "),a("p",[e._v("The next thing is to install the package with yum or dnf.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("yum install ercole-agent")])])]),e._v(" "),a("h2",{attrs:{id:"ercole-web"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole-web","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole-web")]),e._v(" "),a("p",[e._v("Ercole-web is the official optional frontend of the ercole.io project")]),e._v(" "),a("h3",{attrs:{id:"requirements-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("Component")]),e._v(" "),a("th",[e._v("Prerequisite")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Operating system")]),e._v(" "),a("td",[e._v("CentOS, RedHat, OracleLinux 7/8")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("RAM")]),e._v(" "),a("td",[e._v("512MB")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("Filesystem")]),e._v(" "),a("td",[e._v("2GB (minimum)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("CPU")]),e._v(" "),a("td",[e._v("1 VirtualCPU")])])])]),e._v(" "),a("h3",{attrs:{id:"installation-guide-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-guide-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Installation guide")]),e._v(" "),a("p",[e._v("This installation guide is for RHEL8, but the steps can be easily adapted for RHEL7.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-noarch.repo | tee /etc/yum.repos.d/ercole-noarch.repo")])]),e._v(" "),a("li",[a("code",[e._v("yum install ercole-web")]),e._v("\nThe website files can be found under "),a("code",[e._v("/usr/share/ercole/web/")]),e._v(".\nIf you want setup nginx for serving the files and proxy-pass you can follow this "),a("a",{attrs:{href:"#how-to-setup-ercole-ercole-web-with-nginx-and-proxypass"}},[e._v("HOWTO")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),a("p",[e._v("Ercole-web has a single file and it's stored in "),a("code",[e._v("/usr/share/ercole/web/config.json")]),e._v(". The file isn't tought to be modified by hand but it's generated by "),a("code",[e._v("ercoleweb-setup")]),e._v(" util using the values inside the file "),a("code",[e._v("/etc/ercole/conf.d/20-ercolesetup.toml")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"ercole-agent-and-ercole-agent-perl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole-agent-and-ercole-agent-perl","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole-agent and ercole-agent-perl")]),e._v(" "),a("p",[e._v("Ercole-agent and ercole-agent-perl are the data collectors that fetches some informations from various sources like the host and the software. Organize them in a JSON structure called hostdata and send them to the dataservice.")]),e._v(" "),a("h3",{attrs:{id:"differences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#differences","aria-hidden":"true"}},[e._v("#")]),e._v(" Differences")]),e._v(" "),a("p",[e._v("There are two different variant of ercole-agent: ercole-agent (go) and ercole-agent-perl. Their main differences are the programming language, operating system support and feature/targets support. It's advised to stick to ercole-agent (go)")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Feature")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Ercole-agent (go)")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Ercole-agent-perl")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Programming Language")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Go 1.14")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Perl 5.8.8")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Linux (generic) support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes[1]")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Windows Server >= 2008R2 support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Solaris operating system support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes[2]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("AIX operating system support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("HP-UX operating system support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes[2]")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Virtualization")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("(virtualization) Oracle/VM target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("(virtualization) VMWare/VMWare target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Oracle/Database target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Oracle/Exadata target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Microsoft/SQLServer target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("MariaDBFoundation/MariaDB target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("PostgreSQL/PostgreSQL target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Oracle/MySQL target")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("no")])])])]),e._v(" "),a("p",[e._v("[1] It's packaged only for RHEL5, RHEL6, RHEL7, RHEL8.")]),e._v(" "),a("p",[e._v("[2] It isn't already properly packaged.")]),e._v(" "),a("h2",{attrs:{id:"ercole-agent-go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole-agent-go","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole-agent (go)")]),e._v(" "),a("h3",{attrs:{id:"rhelx-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rhelx-installation","aria-hidden":"true"}},[e._v("#")]),e._v(" RHELx installation")]),e._v(" "),a("p",[e._v("The installations instructions are written for RHEL8, but they are also applicable to older RHEL versions.")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("curl https://repository.ercole.io/shared/ercole-rhel8-x86_64.repo | tee /etc/yum.repos.d/ercole-x86_64.repo")])]),e._v(" "),a("li",[a("code",[e._v("yum install ercole-agent")])])]),e._v(" "),a("h3",{attrs:{id:"windows-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-installation","aria-hidden":"true"}},[e._v("#")]),e._v(" Windows installation")]),e._v(" "),a("p",[e._v("On windows it's required to have powershell >= 2.")]),e._v(" "),a("ol",[a("li",[e._v("Download the correct file from "),a("a",{attrs:{href:"https://repository.ercole.io/win/win/x86_64/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://repository.ercole.io/win/win/x86_64/"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("li",[e._v("Click to the setup and follow the installation wizard. At the moment the customization of installation directory doesn't work correctly: it must be installed in "),a("code",[e._v("C:\\ErcoleAgent")]),e._v(" (see "),a("a",{attrs:{href:"https://github.com/ercole-io/ercole-agent/issues/186",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #186"),a("OutboundLink")],1),e._v(" and "),a("a",{attrs:{href:"https://github.com/ercole-io/ercole-agent/issues/54",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #54"),a("OutboundLink")],1),e._v(").")])]),e._v(" "),a("h3",{attrs:{id:"operating-system-level-differences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operating-system-level-differences","aria-hidden":"true"}},[e._v("#")]),e._v(" Operating system level differences")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}}),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("RHEL5")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("RHEL6")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("RHEL7")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("RHEL8")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Windows")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Service handling program")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("service")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("systemctl")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("systemctl")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("systemctl")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("services.msc")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Fetcher alternative user support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Powershell required")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No[1]")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No[1]")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No[1]")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No[1]")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("Features.OracleDatabase.Oratab")]),e._v(" used")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("ForcePwshVersion")]),e._v(" property used")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Virtualization support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Oracle/Database support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Oracle/Exadata support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Microsoft/SQLServer support")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("No")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Yes")])])])]),e._v(" "),a("p",[e._v("[1] Except when Virtualization feature is enabled")]),e._v(" "),a("h3",{attrs:{id:"configuration-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),a("p",[e._v("Ercole-agent can be configured modifying the content of the "),a("code",[e._v("config.json")]),e._v(" stored in "),a("code",[e._v("/opt/ercole-agent/config.json")]),e._v(" (Linux) or "),a("code",[e._v("C:\\ercoleAgent\\config.json")]),e._v(" (Windows).\nThe configuration properties are:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Hostname")]),e._v(": If the value is "),a("code",[e._v("default")]),e._v(", the hostname used to identifying the agents is the hostname of the host, otherwise it's the value of the "),a("code",[e._v("Hostname")]),e._v(" property. The default value is "),a("code",[e._v("default")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("Environment")]),e._v(": It's the environment of the machine. e.g TST, PRD, DEV, COLL, ...")]),e._v(" "),a("li",[a("code",[e._v("Location")]),e._v(": It's the physical location of the host. e.g Italy, Germany, France, ...")]),e._v(" "),a("li",[a("code",[e._v("DataserviceURL")]),e._v(": It's the base URL of ercole-dataservice to which are sent the hostdatas.")]),e._v(" "),a("li",[a("code",[e._v("AgentUser")]),e._v(": It's the username used by agent to be authenticated by ercole-dataservice.")]),e._v(" "),a("li",[a("code",[e._v("AgentPassword")]),e._v(": It's the password used by agent to be authenticated by ercole-dataservice.")]),e._v(" "),a("li",[a("code",[e._v("EnableServerValidation")]),e._v(": True if ercole-agent should validate ercole-dataservice https certificate.")]),e._v(" "),a("li",[a("code",[e._v("ForcePwshVersion")]),e._v(": Use a specific version of powershell. Used only on windows.")]),e._v(" "),a("li",[a("code",[e._v("Period")]),e._v(": Is the number of hour between different runs.")]),e._v(" "),a("li",[a("code",[e._v("Verbose")]),e._v(": Add more verbosity to agent .")]),e._v(" "),a("li",[a("code",[e._v("ParallelizeRequests")]),e._v(": True if ercole-agent should run the fetchers in parallel. Otherwise false.")]),e._v(" "),a("li",[a("code",[e._v("Features")]),e._v(": Contains specific configuration of the targets/features.")])]),e._v(" "),a("h3",{attrs:{id:"virtualization-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtualization-target","aria-hidden":"true"}},[e._v("#")]),e._v(" Virtualization target")]),e._v(" "),a("h4",{attrs:{id:"requirements-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("h5",{attrs:{id:"vmware-vmware"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vmware-vmware","aria-hidden":"true"}},[e._v("#")]),e._v(" VMWare/VMWare:")]),e._v(" "),a("ul",[a("li",[e._v("PowerShell(pwsh) version >= 2")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://thesysadminchannel.com/install-vmware-powercli-module-powershell/",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSphere power CLI module"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("Access to vSphere via the 443 port")]),e._v(" "),a("li",[e._v("Read only user access to vSphere")]),e._v(" "),a("li",[e._v("PowerCLI is configured with the following command. "),a("code",[e._v("Set-PowerCLIConfiguration -Scope User -ParticipateInCEIP $false -InvalidCertificateAction ignore")])])]),e._v(" "),a("h5",{attrs:{id:"oracle-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-vm","aria-hidden":"true"}},[e._v("#")]),e._v(" Oracle/VM")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ovm_vmcontrol")]),e._v(" installed on the ovm manager")]),e._v(" "),a("li",[e._v("Key exchange with ovm manager user who can run "),a("code",[e._v("ovm_vmcontrol")])]),e._v(" "),a("li",[e._v("VMs names must not contain spaces (they will be ignored)")]),e._v(" "),a("li",[a("code",[e._v("sshpass")]),e._v(" is installed")]),e._v(" "),a("li",[a("code",[e._v("ovmcli")]),e._v(" installed on ovmmanager (From version 3.2.1)")]),e._v(" "),a("li",[e._v("Access ovmmanager via 10000 port")])]),e._v(" "),a("h4",{attrs:{id:"configuration-features-virtualization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-features-virtualization","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration (Features.Virtualization.*)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Features.Virtualization.Enabled")]),e._v(": true if Virtualization support should be enabled.")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.FetcherUser")]),e._v(": name of the user that should be used for fetching the informations. If the value is empty, it's the user that is running the agent.")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.Hypervisors")]),e._v(": list of the hypervisors from which the clusters/vms list is fetched.")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.Hypervisors.Type")]),e._v(": contains the type of the hypervisors. Valid values are "),a("code",[e._v("vmware")]),e._v(", "),a("code",[e._v("ovm")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.Hypervisors.Endpoint")]),e._v(": contains the endpoint of the hypervisor, e.g vSphere or ovmmanager ip address.")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.Hypervisors.Username")]),e._v(": contains the username used to authenticate the agent.")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.Hypervisors.OvmUserKey")]),e._v(": it's the user ID of the user on ovmmanger that have exchanged keys with the components.")]),e._v(" "),a("li",[a("code",[e._v("Features.Virtualization.Hypervisors.OvmControl")]),e._v(": contains the /path/to/ovmcontrol.")])]),e._v(" "),a("h3",{attrs:{id:"oracle-database-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-database-target","aria-hidden":"true"}},[e._v("#")]),e._v(" Oracle/Database target")]),e._v(" "),a("h4",{attrs:{id:"requirements-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[e._v("Oracle Database version >= 9i")])]),e._v(" "),a("h4",{attrs:{id:"configuration-features-oracledatabase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-features-oracledatabase","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration (Features.OracleDatabase.*)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Features.OracleDatabase.Enabled")]),e._v(": true if Oracle/Database support should be enabled.")]),e._v(" "),a("li",[a("code",[e._v("Features.OracleDatabase.FetcherUser")]),e._v(": name of the user that should be used for fetching the informations. If the value is empty, it's the user that is running the agent.")]),e._v(" "),a("li",[a("code",[e._v("Features.OracleDatabase.Oratab")]),e._v(": it's the /path/to/the/oratab, the file that contains the list of DBs")]),e._v(" "),a("li",[a("code",[e._v("Features.OracleDatabase.AWR")]),e._v(": it's the number of Automatic workload repository")]),e._v(" "),a("li",[a("code",[e._v("Features.OracleDatabase.Forcestats")]),e._v(": true if enable the running of fetch/stats fetcher")])]),e._v(" "),a("h3",{attrs:{id:"oracle-exadata-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-exadata-target","aria-hidden":"true"}},[e._v("#")]),e._v(" Oracle/Exadata target")]),e._v(" "),a("h4",{attrs:{id:"requirements-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-6","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v("The exadata component should not be virtualized.")]),e._v(" "),a("h4",{attrs:{id:"configuration-features-oracleexadata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-features-oracleexadata","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration (Features.OracleExadata.*)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Features.OracleExadata.Enabled")]),e._v(": true if Oracle/Exadata support should be enabled.")]),e._v(" "),a("li",[a("code",[e._v("Features.OracleExadata.FetcherUser")]),e._v(": name of the user that should be used for fetching the informations. If the value is empty, it's the user that is running the agent. Root permissions are usually required.")])]),e._v(" "),a("h3",{attrs:{id:"microsoft-sqlserver-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#microsoft-sqlserver-target","aria-hidden":"true"}},[e._v("#")]),e._v(" Microsoft/SQLServer target")]),e._v(" "),a("h4",{attrs:{id:"requirements-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-7","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[e._v("The service user need administration permissions to access to the instances (Trusted connection)")]),e._v(" "),a("li",[e._v("TCP/IP protocol connections is enabled on the instances")]),e._v(" "),a("li",[e._v("ercole-agent service need to have a setted user")])]),e._v(" "),a("h4",{attrs:{id:"configuration-features-microsoftsqlserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-features-microsoftsqlserver","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration (Features.MicrosoftSQLServer.*)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Features.MicrosoftSQLServer.Enabled")]),e._v(": true if Microsoft/SQLServer support should be enabled.")]),e._v(" "),a("li",[a("code",[e._v("Features.MicrosoftSQLServer.FetcherUser")]),e._v(": name of the user that should be used for fetching the informations. If the value is empty, it's the user that is running the agent. It's useless...")])]),e._v(" "),a("h2",{attrs:{id:"ercole-agent-perl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ercole-agent-perl","aria-hidden":"true"}},[e._v("#")]),e._v(" Ercole-agent-perl")]),e._v(" "),a("h4",{attrs:{id:"requirements-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-8","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[e._v("perl >= 5.8.8")]),e._v(" "),a("li",[e._v("Oracle Database version >= 9i")])]),e._v(" "),a("h3",{attrs:{id:"solaris-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solaris-installation","aria-hidden":"true"}},[e._v("#")]),e._v(" Solaris installation")]),e._v(" "),a("ol",[a("li",[e._v("Download the agent from the repository")]),e._v(" "),a("li",[a("code",[e._v("cd /")])]),e._v(" "),a("li",[a("code",[e._v("tar xvf /path/to/ercole-agent-perl-<version>-1.solaris11.noarch.tar.gz")])]),e._v(" "),a("li",[a("code",[e._v("svcadm restart manifest-import")])]),e._v(" "),a("li",[a("code",[e._v("svcadm enable ercole-agent-perl")])])]),e._v(" "),a("h4",{attrs:{id:"maintenance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maintenance","aria-hidden":"true"}},[e._v("#")]),e._v(" Maintenance")]),e._v(" "),a("ul",[a("li",[e._v("The service can be restarted with "),a("code",[e._v("svcadm restart ercole-agent-perl")]),e._v(".")]),e._v(" "),a("li",[e._v("The log can be usually found in "),a("code",[e._v("/var/svc/log/ercole-agent-perl:default.log")]),e._v(".")]),e._v(" "),a("li",[e._v("The state can be queried with "),a("code",[e._v("svcs -x ercole-agent-perl")])])]),e._v(" "),a("h3",{attrs:{id:"aix-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aix-installation","aria-hidden":"true"}},[e._v("#")]),e._v(" AIX installation")]),e._v(" "),a("ol",[a("li",[e._v("Download the agent from the repository")]),e._v(" "),a("li",[a("code",[e._v('useradd -g dba -d /home/ercole-agent -m -s /bin/bash -c "Ercole agent user" ercole')])]),e._v(" "),a("li",[a("code",[e._v("touch /var/log/ercole-agent-perl.log")])]),e._v(" "),a("li",[a("code",[e._v("chown ercole /var/log/ercole-agent-perl.log")])]),e._v(" "),a("li",[a("code",[e._v("rpm -ivh ercole-agent-perl-<version>-1.aix6.1.noarch.rpm")])]),e._v(" "),a("li",[a("code",[e._v("/etc/rc.d/init.d/ercole-agent-perl start")])])]),e._v(" "),a("h4",{attrs:{id:"maintenance-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maintenance-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Maintenance")]),e._v(" "),a("ul",[a("li",[e._v("The service can be restarted with "),a("code",[e._v("/etc/rc.d/init.d/ercole-agent-perl restart")]),e._v(".")]),e._v(" "),a("li",[e._v("The log can be usually found in "),a("code",[e._v("/var/log/ercole-agent.log")]),e._v(".")]),e._v(" "),a("li",[e._v("The state can be queried with "),a("code",[e._v("ps -ef | grep ercole-agent")])])]),e._v(" "),a("h3",{attrs:{id:"hpux-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hpux-installation","aria-hidden":"true"}},[e._v("#")]),e._v(" HPUX installation")]),e._v(" "),a("ol",[a("li",[e._v("Download the agent from the repository")]),e._v(" "),a("li",[a("code",[e._v("cd /")])]),e._v(" "),a("li",[a("code",[e._v("tar xvf /path/to/ercole-agent-perl-<version>-1.hpux.noarch.tar.gz")])]),e._v(" "),a("li",[a("code",[e._v('useradd -g dba -d /home/ercole-agent -m -s /bin/bash -c "Ercole agent user" ercole')])]),e._v(" "),a("li",[a("code",[e._v("touch /var/adm/ercole-agent.log")])]),e._v(" "),a("li",[a("code",[e._v("chown ercole /var/adm/ercole-agent.log")])]),e._v(" "),a("li",[a("code",[e._v("/sbin/init.d/ercole-agent start")])])]),e._v(" "),a("h4",{attrs:{id:"maintenance-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maintenance-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Maintenance")]),e._v(" "),a("ul",[a("li",[e._v("The service can be restarted with "),a("code",[e._v("/sbin/init.d/ercole-agent restart")]),e._v(".")]),e._v(" "),a("li",[e._v("The log can be found in "),a("code",[e._v("/var/adm/ercole-agent.log")]),e._v(".")]),e._v(" "),a("li",[e._v("The state can be queried with "),a("code",[e._v("ps -ef | grep ercole-agent")])])]),e._v(" "),a("h3",{attrs:{id:"configuration-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),a("p",[e._v("Ercole-agent-perl can be configured modifying the content of the "),a("code",[e._v("config.json")]),e._v(" stored in "),a("code",[e._v("/opt/ercole-agent/config.json")]),e._v(" (Linux).\nThe configuration properties are:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("hostname")]),e._v(": If the value is "),a("code",[e._v("default")]),e._v(", the hostname used to identifying the agents is the hostname of the host, otherwise it's the value of the "),a("code",[e._v("Hostname")]),e._v(" property. The default value is "),a("code",[e._v("default")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("envtype")]),e._v(": It's the environment of the machine. e.g TST, PRD, DEV, COLL, ...")]),e._v(" "),a("li",[a("code",[e._v("location")]),e._v(": It's the physical location of the host. e.g Italy, Germany, France, ...")]),e._v(" "),a("li",[a("code",[e._v("serverurl")]),e._v(": It's the base URL of ercole-dataservice to which are sent the hostdatas.")]),e._v(" "),a("li",[a("code",[e._v("serverusr")]),e._v(": It's the username used by agent to be authenticated by ercole-dataservice.")]),e._v(" "),a("li",[a("code",[e._v("serverpsw")]),e._v(": It's the password used by agent to be authenticated by ercole-dataservice.")]),e._v(" "),a("li",[a("code",[e._v("frequency")]),e._v(": Is the number of hour between different runs.")]),e._v(" "),a("li",[a("code",[e._v("forcestats")]),e._v(": True if the fetcher fetch/*/stats should be run")]),e._v(" "),a("li",[a("code",[e._v("EnableServerValidation")]),e._v(": True if ercole-agent should validate ercole-dataservice https certificate.")]),e._v(" "),a("li",[a("code",[e._v("oratab")]),e._v(": it's the /path/to/the/oratab, the file that contains the list of DBs")]),e._v(" "),a("li",[a("code",[e._v("AWR")]),e._v(": it's the number of Automatic workload repository")]),e._v(" "),a("li",[a("code",[e._v("UseCurl")]),e._v(": true if the agent should use curl to send the hostdata. Otherwise use the internal perl library. On solaris the internal library seems to not work.")])])])},[],!1,null,null,null);t.default=i.exports}}]);